(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{355:function(t,s,a){"use strict";a.r(s);var n=a(22),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"esp-1-complete-script-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#esp-1-complete-script-file","aria-hidden":"true"}},[t._v("#")]),t._v(" ESP 1 - Complete Script File")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/* **********************************************\n * Simple Table Creation - Columns and Primary Keys\n *\n * Emergency Service & Product\n * Specification Document 1\n * Version 1.0.0\n *\n * Author: Dan Gilleland\n ********************************************** */")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Select the CREATE DATABASE stement below to create the demo database.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- CREATE DATABASE [ESP-A01]")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("USE")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ESP"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("A01"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("-- this is a statement that tells us to switch to a particular database")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('-- Notice in the database name above, it is "wrapped" in square brackets because ')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- the name had a hypen in it. ")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- For all our other objects (tables, columns, etc), we won't use hypens or spaces, so")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- the use of square brackets are optional.")]),t._v("\nGO  "),a("span",{attrs:{class:"token comment"}},[t._v('-- this statement helps to "separate" various DDL statements in our script')]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v('-- so that they are executed as "blocks" of code.')]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- To create a database table, we use the CREATE TABLE statement.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Note that the order in which we create/drop tables is important")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- because of how the tables are related via Foreign Keys.")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v('/* DROP TABLE statements (to "clean up" the database for re-creation)  */')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*   You should drop tables in the REVERSE order in which you created them */")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" INFORMATION_SCHEMA"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("TABLES")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" TABLE_NAME "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'OrderDetails'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" OrderDetails\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" INFORMATION_SCHEMA"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("TABLES")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" TABLE_NAME "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'InventoryItems'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" InventoryItems\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" INFORMATION_SCHEMA"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("TABLES")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" TABLE_NAME "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Orders'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("EXISTS")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" INFORMATION_SCHEMA"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token keyword"}},[t._v("TABLES")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" TABLE_NAME "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Customers'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- To create a database table, we use the CREATE TABLE statement.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Note that the order in which we create/drop tables is important")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- because of how the tables are related via Foreign Keys.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- The body of a CREATE TABLE will identify a comma-separated list of")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- Column Declarations and Table Constraints.")]),t._v("\n    CustomerNumber  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- The following is a PRIMARY KEY constraint that has a specific name")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- Primary Key constraints ensure a row of data being added to the table")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- will have to have a unique value for the Primary Key column(s)")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_Customers_CustomerNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- IDENTITY means the database will generate a unique whole-number")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- value for this column")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("IDENTITY")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('-- The first number is the "seed",')]),t._v("\n                         "),a("span",{attrs:{class:"token comment"}},[t._v('-- and the last number is the "increment"')]),t._v("\n                                        "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("-- NOT NULL means the data is required")]),t._v("\n    FirstName       "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    LastName        "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("60")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("       "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("40")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    City            "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("35")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Province        "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- A DEFAULT constraint will supply a default value for a column")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- whenever no value is supplied when adding a row of data")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" DF_Customers_Province\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'AB'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- A CHECK constraint ensures that only the specified value(s)")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- will be accepted when adding a row of data")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_Province\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'AB'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'BC'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'SK'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'MB'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'QC'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'ON'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'NT'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'NS'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'NB'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'NL'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'YK'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'NU'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v("\n                   Province "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'PE'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                        "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    PostalCode      "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_PostalCode\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PostalCode "),a("span",{attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'[A-Z][0-9][A-Z][0-9][A-Z][0-9]'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                        "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    PhoneNumber     "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("13")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_PhoneNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PhoneNumber "),a("span",{attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'([0-9][0-9][0-9])[0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                            "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("-- NULL means the data is optional")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    OrderNumber     "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_Orders_OrderNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("IDENTITY")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("200")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CustomerNumber  "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- Foreign Key constraints ensure that when a row of data is being")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- inserted or updated, there is a row in the referenced table")]),t._v("\n        "),a("span",{attrs:{class:"token comment"}},[t._v("-- that has the same value as its Primary Key")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_Orders_CustomerNumber_Customers_CustomerNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v("\n            Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CustomerNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token keyword"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("          "),a("span",{attrs:{class:"token keyword"}},[t._v("datetime")]),t._v("            "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Subtotal        money\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Orders_Subtotal\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Subtotal "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    GST             money\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Orders_GST\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GST "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("            "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Total           "),a("span",{attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" Subtotal "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" GST   "),a("span",{attrs:{class:"token comment"}},[t._v("-- This is now a Computed Column")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" InventoryItems\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    ItemNumber          "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_InventoryItems_ItemNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v("                     "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ItemDescription     "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    CurrentSalePrice    money\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_InventoryItems_CurrentSalePrice\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    InStockCount        "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("                 "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ReorderLevel        "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("                 "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" OrderDetails\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    OrderNumber     "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_OrderDetails_OrderNumber_Orders_OrderNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v("\n            Orders"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OrderNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ItemNumber      "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" FK_OrderDetails_ItemNumber_InventoryItems_ItemNumber\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("FOREIGN")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("REFERENCES")]),t._v("\n            InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Quantity        "),a("span",{attrs:{class:"token keyword"}},[t._v("int")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" DF_OrderDetails_Quantity\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_OrderDetails_Quantity\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Quantity "),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    SellingPrice    money\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_OrderDetails_SellingPrice\n            "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SellingPrice "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v('-- The Amount column is a CALCULATED (or "derived") column.')]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- It's value is the result of multiplying Quantity by SellingPrice.")]),t._v("\n    Amount          "),a("span",{attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" Quantity "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" SellingPrice  "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- Table-level constraint on two columns being compared to each other")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Orders_Subtotal_GST\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GST "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Subtotal "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v(".05")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("OR")]),t._v(" GST "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- The following is a Table Constraint")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- A composite primary key MUST be done as a Table Constraint")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- because it involves two or more columns")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" PK_OrderDetails_OrderNumber_ItemNumber\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("PRIMARY")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("KEY")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OrderNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("-- Specify all the columns in the PK")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Let's insert a few rows of data for the tables (DML Statements)")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Inserting customer data'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" City"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PostalCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Clark'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Kent'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'344 Clinton Street'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Metropolis'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'S0S0N0'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" City"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PostalCode"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Jimmy'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Olsen'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'242 River Close'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Bakerline'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'B4K3R1'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'-- end of customer data--'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Inserting inventory items'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InStockCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ReorderLevel"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'H8726'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Cleaning Fan belt'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("29.95")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InStockCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ReorderLevel"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'H8621'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Engine Fan belt'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("17.45")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'-- end of inventory data --'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Let's write an SQL Query statement to view the data in the database")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Select the customer information")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  CustomerNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" City "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" Province "),a("span",{attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Customer Address'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        PhoneNumber\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("    Customers\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Let's do another set of DML statements to add more data to the database")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Inserting an order'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Orders"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CustomerNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token keyword"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Subtotal"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GST"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GETDATE"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("17.45")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0.87")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" OrderDetails"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OrderNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Quantity"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SellingPrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("200")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'H8726'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("17.45")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'-- end of order data --'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("PRINT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("''")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/* ***************************\n * Change Requests for Spec 1\n *  Perform table changes through ALTER statements.\n *  Syntax for ALTER TABLE can be found at\n *      http://msdn.microsoft.com/en-us/library/ms190273.aspx\n *  ALTER TABLE statements allow us to change an existing table without\n *  having ot drop it or lose information in the table\n * **************************/")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- A) Allow Address, City, Province, and Postal Code to be NULL")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    SQL requires each column to be altered SEPARATELY.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("40")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nGO "),a("span",{attrs:{class:"token comment"}},[t._v('-- this statement helps to "separate" various DDL statements in our script. It\'s optional.')]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" City "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("35")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" Province "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" PostalCode "),a("span",{attrs:{class:"token keyword"}},[t._v("char")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- B) Add a check constraint on the First and Last name to require at least two letters.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    % is a wildcard for zero or more characters (letter, digit, or other character)")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    _ is a wildcard for a single character (letter, digit, or other character)")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    [] are used to represent a range or set of characters that are allowed")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" OBJECT_ID"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'CK_Customers_FirstName'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'C'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("-- 'C' specifies that I'm looking for a constraint")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_FirstName\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_FirstName\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName "),a("span",{attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'[A-Z][A-Z]%'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" OBJECT_ID"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'CK_Customers_LastName'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'C'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_LastName\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" CK_Customers_LastName\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("CHECK")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LastName "),a("span",{attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'[A-Z][A-Z]%'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Once the ALTER TABLE changes are made for A) and B),")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- we can insert Customer information allowing certain columns to be NULL.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Fred'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Flintstone'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Barney'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Rubble'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PhoneNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Wilma'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Slaghoople'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'(403)555-1212'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Customers"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" City"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'Betty'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Mcbricker'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'103 Granite Road'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Bedrock'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Select the customer information")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  CustomerNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" City "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" Province "),a("span",{attrs:{class:"token keyword"}},[t._v("AS")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Customer Address'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        PhoneNumber\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("    Customers\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/*\n    You can check that the constraints work on the first/last name\n    by highlighting and running these scripts. They should fail.\n\nINSERT INTO Customers(FirstName, LastName)\n    VALUES ('F', 'Flintstone')\nINSERT INTO Customers(FirstName, LastName)\n    VALUES ('Fred', 'F')\n\n*/")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- C) Add an extra bit of information on the Customer table. The client wants to")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    start tracking customer emails, so they can send out statements for")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    outstanding payments that are due at the end of the month.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Customers\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" Email "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("30")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- Adding this as a nullable column, because customers already")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("-- exist, and we don't have emails for those customers.")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- D) Add indexes to the Customer's First and Last Name columns")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Indexes improve the performance of the database when retrieving information.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("NONCLUSTERED")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" IX_Customers_FirstName\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Customers "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FirstName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("NONCLUSTERED")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" IX_Customers_LastName\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" Customers "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LastName"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nGO "),a("span",{attrs:{class:"token comment"}},[t._v("-- End of a batch of instructions")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- E) Add a default constraint on the Orders.Date column to use the current date.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- GETDATE() is a global function in the SQL Server Database")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- GETDATE() will obtain the current date/time on the database server")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("IF")]),t._v(" OBJECT_ID"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'DF_Orders_Date'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'C'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders "),a("span",{attrs:{class:"token keyword"}},[t._v("DROP")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" DF_Orders_Date\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" Orders\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" DF_Orders_Date\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" GETDATE"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token keyword"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--      Use     \\ this  / for \\this column/ if no value was supplied when INSERTING data")]),t._v("\nGO\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- To illustrate the default value, consider this sample row for the Orders table")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" Orders"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CustomerNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Subtotal"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" GST"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("101")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("150.00")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("7.50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Select the current orders")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  OrderNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CustomerNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Total"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token keyword"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("    Orders\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Prep-data for change request F) below ....")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Some inventory data without a ItemDescription")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InStockCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ReorderLevel"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'GR35A'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("45.95")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InStockCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ReorderLevel"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'KD5-Q'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1.45")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("7")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("    InventoryItems\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- F) Change the InventoryItems.ItemDescription column to be NOT NULL")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    WAIT!! We have described the ItemDescription as allowing NULL values.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--           That means we might have data in the table where the")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--           ItemDescription doesn't exist.")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--           If we try to make that column NOT NULL, what will we do about")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v('--           the existing data in the database where it is "empty"??')]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--           We can fix that by updating the data in the database")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--           where that description is missing.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v("      InventoryItems\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v("      ItemDescription "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'-missing-'")]),t._v("\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("    ItemDescription "),a("span",{attrs:{class:"token operator"}},[t._v("IS")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nGO\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Also Note: We might be asked to put a default value for the column")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--            that will become required. In this case, let's use a")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--            default value of '-no description-'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" InventoryItems\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("CONSTRAINT")]),t._v(" DF_InventoryItems_Description\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("DEFAULT")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'-no description-'")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FOR")]),t._v(" ItemDescription\nGO\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Here's some sample data where ItemDescription is not entered")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- and the default value comes into play. (We'll do 2 rows at once.)")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InStockCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ReorderLevel"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'B-95R'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("45.95")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'GR47D'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("92.45")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("--   Now we can change the ItemDescription to be required (NOT NULL)")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("TABLE")]),t._v(" InventoryItems\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ALTER")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("COLUMN")]),t._v(" ItemDescription "),a("span",{attrs:{class:"token keyword"}},[t._v("varchar")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("NOT")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("NULL")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Let's enter a bit more information in our database")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" InventoryItems"),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" InStockCount"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ReorderLevel"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'BL-92'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'92mm Bolt'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3.95")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("18")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("6")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Let's see the data in the Inventory table")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v("  ItemNumber"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CurrentSalePrice\n"),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v("    InventoryItems\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- G) Add an indes on the Item's Description column, to improve search.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("NONCLUSTERED")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("INDEX")]),t._v(" IX_InventoryItems_ItemDescription\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("ON")]),t._v(" InventoryItems "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ItemDescription"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- ------------------------------------------")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- H) Data change requests: All inventory items that are less than $5.00 have to")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    have their prices increased by 10%.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" InventoryItems\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0.10")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5.00")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    Somebody got married....")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" Customers\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" LastName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Flintstone'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  FirstName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Wilma'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("AND")]),t._v(" LastName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Slaghoople'")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" Customers\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" LastName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Rubble'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  FirstName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Betty'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("AND")]),t._v(" LastName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Mcbricker'")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" Customers\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'103 Granite Road'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       City "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Bedrock'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  LastName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Rubble'")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" Customers\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Address"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'105 Granite Road'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n       City "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Bedrock'")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  LastName "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'Flintstone'")]),t._v("\nGO\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Increase the current sale price for products between $10 and $30 by 2%.")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" InventoryItems\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0.02")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("BETWEEN")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("AND")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("30")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("-- Update the prices for all belts by $5.50, because of newly introduced recyling fees")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" InventoryItems\n   "),a("span",{attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" CurrentSalePrice "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5.5")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  ItemDescription "),a("span",{attrs:{class:"token operator"}},[t._v("LIKE")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'%Belt%'")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("--    And, we want to get rid of some inventory")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" InventoryItems\n"),a("span",{attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v("  ItemNumber "),a("span",{attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'GR47D'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'KD5-Q'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])])])},[],!1,null,null,null);s.default=e.exports}}]);